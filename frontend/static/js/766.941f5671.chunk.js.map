{"version":3,"file":"static/js/766.941f5671.chunk.js","mappings":"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","sources":["pages/Admin/Dashboard/query/useFetchUsers.ts","pages/Admin/users/Users.tsx","services/client.services.ts","services/endPoints.config.ts","services/user.services.ts","utils/QueryKeys.ts","../node_modules/@mui/material/FormControl/FormControlContext.js","../node_modules/@mui/material/FormControl/useFormControl.js"],"sourcesContent":["/**\n * @format\n */\nimport { useQuery } from \"react-query\";\nimport { fetchUsers, getAllUsers } from \"services/user.services\";\nimport { QueryKeys } from \"utils/QueryKeys\";\n\nasync function getUsers(): Promise<any> {\n  try {\n    const response: any = await fetchUsers();\n    if (response.status === 200) {\n      return response;\n    }\n    return {\n      statusCode: 404,\n    };\n  } catch (error) {\n    return Promise.reject(error);\n  }\n}\n\nconst useFetchUsers = () => {\n  const cacheKey = [QueryKeys.getUsers];\n  return useQuery(cacheKey, getAllUsers, {\n    enabled: true,\n    refetchOnWindowFocus: false,\n  });\n};\n\nexport { useFetchUsers };\n","/* eslint-disable no-underscore-dangle */\nimport React, { BaseSyntheticEvent } from \"react\";\nimport CreateIcon from \"@mui/icons-material/Create\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardMedia,\n  Checkbox,\n  IconButton,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableContainer,\n  TableRow,\n  Paper,\n  Typography,\n  Grid,\n  Button,\n} from \"@mui/material\";\n// import { useAlert } from \"components/alert\";\nimport { useState } from \"react\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport palette from \"theme/palette\";\nimport moment from \"moment\";\nimport AppRoutes from \"navigation/appRoutes\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"components/Alert\";\nimport { useFetchContent } from \"../Dashboard/query/useFetchContent\";\nimport { useFetchUsers } from \"../Dashboard/query/useFetchUsers\";\n\nconst { REACT_APP_BASE_URL } = process.env;\n\nfunction Users() {\n  const [selectedUserIds, setSelectedUserids] = useState<string[]>([]);\n\n  const { data: users } = useFetchUsers();\n\n  const selectAll = (e: BaseSyntheticEvent) => {\n    const { checked } = e.target;\n\n    if (!users?.data) {\n      return;\n    }\n\n    let contentIds: string[] = [];\n    if (checked) {\n      contentIds = users.data.map((i) => i._id);\n    } else {\n      contentIds = [];\n    }\n    setSelectedUserids(contentIds);\n  };\n\n  const selectUser = (e: BaseSyntheticEvent, checked: boolean) => {\n    const { id } = e.target;\n\n    if (!users?.data) {\n      return;\n    }\n\n    let userIds: string[] = [];\n\n    if (checked) {\n      userIds = [...selectedUserIds, id];\n    } else {\n      userIds = selectedUserIds.filter((i) => i !== id) || [];\n    }\n\n    setSelectedUserids(userIds);\n  };\n\n  return (\n    <Box\n      sx={{\n        // minWidth: 1050,\n        overflow: \"auto\",\n      }}\n    >\n      <Stack\n        alignItems=\"center\"\n        direction=\"row\"\n        justifyContent=\"space-between\"\n        marginY=\"20px\"\n      >\n        <Typography\n          component=\"h2\"\n          sx={{\n            fontSize: \"2rem\",\n          }}\n        >\n          All Users\n        </Typography>\n      </Stack>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead\n            sx={{\n              backgroundColor: \"#e1e1e1 !important\",\n              \"& th\": { fontWeight: 600 },\n            }}\n          >\n            <TableRow>\n              <TableCell padding=\"checkbox\">\n                <Checkbox\n                  checked={selectedUserIds.length === users?.data.length}\n                  color=\"primary\"\n                  // indeterminate={\n                  //   selectedcontentIds.length > 0 &&\n                  // }\n                  onChange={selectAll}\n                />\n              </TableCell>\n              <TableCell>\n                <Typography\n                  sx={{\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  Name\n                </Typography>\n              </TableCell>\n\n              <TableCell>\n                <Typography\n                  sx={{\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  Mobile\n                </Typography>\n              </TableCell>\n\n              <TableCell>\n                <Typography\n                  sx={{\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  Created Date\n                </Typography>\n              </TableCell>\n\n              <TableCell>\n                <Typography\n                  sx={{\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  Actions\n                </Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {users?.data?.map((content) => {\n              const { _id: id, name, mobile, createdAt } = content;\n\n              return (\n                <TableRow\n                  key={id}\n                  hover\n                  selected={selectedUserIds.indexOf(id) !== -1}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedUserIds.indexOf(id) !== -1}\n                      value=\"true\"\n                      onChange={selectUser}\n                    />\n                  </TableCell>\n                  <TableCell>\n                    <Typography\n                      component=\"a\"\n                      href={`/users/phonebook/${id}`}\n                      sx={{\n                        textTransform: \"capitalize\",\n                        textDecoration: \"underline\",\n                      }}\n                    >\n                      {name}\n                    </Typography>\n                  </TableCell>\n\n                  <TableCell>\n                    <Typography\n                      sx={{\n                        textTransform: \"capitalize\",\n                      }}\n                    >\n                      {mobile}\n                    </Typography>\n                  </TableCell>\n\n                  <TableCell>\n                    <Typography>\n                      {moment(createdAt).format(\"MM/DD/YYYY\")}\n                    </Typography>\n                  </TableCell>\n\n                  <TableCell>\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        gap: 1,\n                        \"& svg\": {\n                          cursor: \"pointer\",\n                        },\n                      }}\n                    >\n                      <Box>\n                        <IconButton\n                          onClick={() => {}}\n                          sx={{\n                            \"&:hover\": {\n                              color: palette.error.main,\n                            },\n                          }}\n                        >\n                          <DeleteIcon\n                            sx={{\n                              fontSize: \"1.5rem\",\n                              color: palette.secondary.lightGray,\n                              \"&:hover\": {\n                                color: palette.error.main,\n                              },\n                            }}\n                          />\n                        </IconButton>\n                      </Box>\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n}\n\nexport default Users;\n","import axios from \"axios\";\r\nimport { store } from \"redux/store\";\r\n\r\nconst client = axios.create({\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nconst AUTH_ROUTES = [\"login\", \"reset-password\", \"forgot-password\", \"signup\"];\r\n\r\nconst FILE_ROUTES = [\"upload\"];\r\n\r\nclient.interceptors.request.use(\r\n  (request: any) => {\r\n    const authRoutes = AUTH_ROUTES.some((i) => {\r\n      return request.url.includes(i);\r\n    });\r\n    const uploadRoutes = FILE_ROUTES.some((i) => {\r\n      return request.url.includes(i);\r\n    });\r\n    const { user } = store.getState();\r\n    const { token } = user;\r\n\r\n    if (!authRoutes) {\r\n      // TODO: add token to secure request\r\n      request.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    if (uploadRoutes) {\r\n      request.headers[\"Content-Type\"] = \"multipart/form-data\";\r\n    }\r\n    return request;\r\n  },\r\n  (error: any) => {\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\nclient.interceptors.response.use(\r\n  (response: any) => {\r\n    if (response.data.error) {\r\n      return Promise.reject(response.data);\r\n    }\r\n    return Promise.resolve(response.data);\r\n  },\r\n  (error: any) => {\r\n    if (error.response?.status === 401) {\r\n      // TODO: handle expired token\r\n      // store.dispatch(\r\n      //   setUserCredential({\r\n      //     token: \"\",\r\n      //     userInfo: null,\r\n      //     isLoggedIn: false,\r\n      //     role: \"\",\r\n      //   }),\r\n      // );\r\n      // window.location.href = \"/\";\r\n      return Promise.reject(error.response?.data);\r\n    }\r\n    return Promise.reject(error.response?.data);\r\n  },\r\n);\r\n\r\nexport default client;\r\n","/* eslint-disable react/jsx-sort-props */\r\nconst { REACT_APP_BASE_URL } = process.env;\r\n\r\nconst BASE_API_URL = `${REACT_APP_BASE_URL}/api`;\r\n\r\nconst endPoints = {\r\n  login: \"admin/login\",\r\n  getUsers: \"users\",\r\n  getPhonebook: \"phonebook/getContacts\",\r\n  addUser: \"user\",\r\n  addPhonebook: \"phonebook/saveContacts\",\r\n  getContent: \"contents\",\r\n  addContent: \"video/upload\",\r\n  deleteContent: \"content\",\r\n};\r\n\r\nconst API_URLS = {\r\n  LOGIN: `${BASE_API_URL}/${endPoints.login}`,\r\n  FETCH_USERS: `${BASE_API_URL}/${endPoints.getUsers}`,\r\n  FETCH_PHONEBOOK: `${BASE_API_URL}/${endPoints.getPhonebook}`,\r\n  ADD_USER: `${BASE_API_URL}/${endPoints.addUser}`,\r\n  ADD_PHONEBOOK: `${BASE_API_URL}/${endPoints.addPhonebook}`,\r\n  GET_CONTENT: `${BASE_API_URL}/${endPoints.getContent}`,\r\n  ADD_CONTENT: `${BASE_API_URL}/${endPoints.addContent}`,\r\n  DELETE_CONTENT: `${BASE_API_URL}/${endPoints.deleteContent}`,\r\n};\r\n\r\nexport default API_URLS;\r\n","import { GetAllUsersRoot } from \"types/getAllUersRespone\";\nimport { GetAllPhonebookByUserIdRoot } from \"types/getAllPhonebookByUserIdResponse\";\nimport client from \"./client.services\";\nimport API_URLS from \"./endPoints.config\";\n\nasync function fetchUsers(): Promise<any> {\n  // interface will create for response in interface folder\n  return client.get(API_URLS.FETCH_USERS);\n}\n\nexport async function getPhonebookByUserId(\n  id: string,\n): Promise<GetAllPhonebookByUserIdRoot> {\n  const url = `${API_URLS.FETCH_PHONEBOOK}/${id}`;\n  return client.get(url);\n}\n\nasync function fetchPhonebook(id: string): Promise<any> {\n  // interface will create for response in interface folder\n  const url = `${API_URLS.FETCH_PHONEBOOK}/${id}`;\n  return client.get(url);\n}\n\nasync function addUser(body: any): Promise<any> {\n  // interface will create for response in interface folder\n  return client.post(API_URLS.ADD_USER, body);\n}\n\nasync function addPhonebook(body: any): Promise<any> {\n  // interface will create for response in interface folder\n  return client.post(API_URLS.ADD_PHONEBOOK, body);\n}\n\nexport async function getAllUsers(): Promise<GetAllUsersRoot> {\n  return client.get(API_URLS.FETCH_USERS);\n}\n\nexport { fetchUsers, addUser, fetchPhonebook, addPhonebook };\n","/**\r\n * @format\r\n */\r\nconst QueryKeys = {\r\n  getUsers: \"user.get\",\r\n  getPhonebook: \"user.getPhonebook\",\r\n  getContent:\"getContent\"\r\n\r\n};\r\n\r\nexport type QueryKeysType = keyof typeof QueryKeys;\r\n\r\nexport { QueryKeys };\r\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst FormControlContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\nexport default FormControlContext;","import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}"],"names":["useFetchUsers","cacheKey","QueryKeys","useQuery","getAllUsers","enabled","refetchOnWindowFocus","_users$data","_useState","useState","_useState2","_slicedToArray","selectedUserIds","setSelectedUserids","users","data","selectUser","e","checked","id","target","userIds","concat","_toConsumableArray","filter","i","_jsxs","Box","sx","overflow","children","_jsx","Stack","alignItems","direction","justifyContent","marginY","Typography","component","fontSize","TableContainer","Paper","Table","TableHead","backgroundColor","fontWeight","TableRow","TableCell","padding","Checkbox","length","color","onChange","contentIds","map","_id","TableBody","content","name","mobile","createdAt","hover","selected","indexOf","value","href","textTransform","textDecoration","moment","format","display","gap","cursor","IconButton","onClick","palette","DeleteIcon","client","axios","headers","AUTH_ROUTES","FILE_ROUTES","interceptors","request","use","authRoutes","some","url","includes","uploadRoutes","token","store","user","Authorization","error","Promise","reject","response","resolve","_error$response","_error$response3","_error$response2","status","BASE_API_URL","process","endPoints","API_URLS","LOGIN","FETCH_USERS","FETCH_PHONEBOOK","ADD_USER","ADD_PHONEBOOK","GET_CONTENT","ADD_CONTENT","DELETE_CONTENT","getPhonebookByUserId","_x","_getPhonebookByUserId","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","wrap","_context2","prev","next","abrupt","stop","_getAllUsers","_callee6","_context6","getUsers","getPhonebook","getContent","FormControlContext","React","undefined","useFormControl"],"sourceRoot":""}