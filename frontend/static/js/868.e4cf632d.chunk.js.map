{"version":3,"file":"static/js/868.e4cf632d.chunk.js","mappings":"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","sources":["components/DashboardLayout/CustomAppBar.tsx","components/DashboardLayout/CustomDrawer.tsx","components/DashboardLayout/index.tsx"],"sourcesContent":["import Brightness4Icon from \"@mui/icons-material/Brightness4\";\nimport Brightness5Icon from \"@mui/icons-material/Brightness5\";\nimport NotificationsNoneIcon from \"@mui/icons-material/NotificationsNone\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport {\n  Avatar,\n  Badge,\n  Box,\n  InputAdornment,\n  Stack,\n  SvgIcon,\n  TextField,\n} from \"@mui/material\";\nimport MuiAppBar, { AppBarProps as MuiAppBarProps } from \"@mui/material/AppBar\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Toolbar from \"@mui/material/Toolbar\";\nimport { styled, useTheme } from \"@mui/material/styles\";\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\nimport { drawerWidth } from \".\";\n\n\n\ninterface AppBarProps extends MuiAppBarProps {\n  open?: boolean;\n}\n\nconst AppBar = styled(MuiAppBar, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})<AppBarProps>(({ theme, open }) => ({\n  zIndex: theme.zIndex.drawer + 1,\n  transition: theme.transitions.create([\"width\", \"margin\"], {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  ...(open && {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  }),\n  ...(!open && {\n    marginLeft: `calc(${theme.spacing(7)} + 1px)`,\n  }),\n}));\n\ninterface ICustomAppBar {\n  open: boolean;\n  handleDrawerOpen: () => void;\n}\n\nfunction CustomAppBar(props: ICustomAppBar) {\n  const { open, handleDrawerOpen } = props;\n\n  return (\n    <AppBar\n      open={open}\n      position=\"fixed\"\n      sx={{\n        background: \"transparent\",\n        backdropFilter: \"blur(20px)\",\n        boxShadow: \"none\",\n        borderBottom: \"1px solid rgba(0, 0, 0, 0.12)\",\n      }}\n    >\n      <Toolbar>\n        <IconButton\n          disableRipple\n          aria-label=\"open drawer\"\n          color=\"inherit\"\n          edge=\"start\"\n          sx={{\n            marginRight: 5,\n            ...(open && { display: \"none\" }),\n          }}\n          onClick={handleDrawerOpen}\n        >\n          {/* <img\n            alt=\"logo\"\n            height=\"64\"\n            src={logoURL}\n            style={{\n              maxWidth: \"100%\",\n              display: \"block\",\n              height: \"50px\",\n              objectFit: \"cover\",\n            }}\n          /> */}\n        </IconButton>\n\n        <Stack\n          alignContent=\"end\"\n          alignItems=\"center\"\n          direction=\"row\"\n          gap={1}\n          justifyContent=\"end\"\n          width=\"100%\"\n        >\n          <Box sx={{ maxWidth: 300 }}>\n            <TextField\n              fullWidth\n              InputProps={{\n                sx: {\n                  borderRadius: 50,\n                  \"& input\": {\n                    padding: \"8px 10px\",\n                    paddingLeft: \"16px\",\n                    fontSize: \"0.9rem\",\n                  },\n                },\n                endAdornment: (\n                  <InputAdornment position=\"end\">\n                    <SvgIcon color=\"action\" fontSize=\"small\">\n                      <SearchIcon />\n                    </SvgIcon>\n                  </InputAdornment>\n                ),\n              }}\n              placeholder=\"Search...\"\n              variant=\"outlined\"\n            />\n          </Box>\n\n          <Avatar\n            // src={`${config.IMAGE_BASE_URL}${user.profilePic}`}\n            src=\"\"\n            sx={{\n              cursor: \"pointer\",\n              height: 30,\n              width: 30,\n              //   backgroundColor: theme.palette.secondary.main,\n              //   color: theme.palette.primary.light,\n              padding: \"10px\",\n            }}\n          >\n            A\n          </Avatar>\n        </Stack>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default CustomAppBar;\n","import MuiDrawer from \"@mui/material/Drawer\";\nimport IconButton from \"@mui/material/IconButton\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { CSSObject, Theme, styled } from \"@mui/material/styles\";\nimport \"react-perfect-scrollbar/dist/css/styles.css\";\nimport { useLocation } from \"react-router-dom\";\nimport DashboardIcon from \"@mui/icons-material/Dashboard\";\nimport PeopleIcon from \"@mui/icons-material/People\";\nimport InventoryIcon from \"@mui/icons-material/Inventory\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport { resetUserCrendential, useAuthActions } from \"redux/user/auth\";\nimport {nanoid} from \"@reduxjs/toolkit\";\n\nimport { Button } from \"@mui/material\";\nimport { drawerWidth } from \".\";\n\nconst openedMixin = (theme: Theme): CSSObject => ({\n  width: drawerWidth,\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.enteringScreen,\n  }),\n  overflowX: \"hidden\",\n});\n\nconst closedMixin = (theme: Theme): CSSObject => ({\n  transition: theme.transitions.create(\"width\", {\n    easing: theme.transitions.easing.sharp,\n    duration: theme.transitions.duration.leavingScreen,\n  }),\n  overflowX: \"hidden\",\n  width: `calc(${theme.spacing(7)} + 1px)`,\n  [theme.breakpoints.up(\"sm\")]: {\n    width: `calc(${theme.spacing(8)} + 1px)`,\n  },\n});\n\nexport const DrawerHeader = styled(\"div\")(({ theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"flex-end\",\n  padding: theme.spacing(0, 1),\n  ...theme.mixins.toolbar,\n}));\n\nconst Drawer = styled(MuiDrawer, {\n  shouldForwardProp: (prop) => prop !== \"open\",\n})(({ theme, open }) => ({\n  width: drawerWidth,\n  flexShrink: 0,\n  whiteSpace: \"nowrap\",\n  boxSizing: \"border-box\",\n  ...(open && {\n    ...openedMixin(theme),\n    \"& .MuiDrawer-paper\": openedMixin(theme),\n  }),\n  ...(!open && {\n    ...closedMixin(theme),\n    \"& .MuiDrawer-paper\": closedMixin(theme),\n  }),\n}));\n\nconst NAVITEM = [\n  {\n    id: nanoid(),\n    icon: <DashboardIcon fontSize=\"small\" />,\n    title: \"Dashboard\",\n    href: \"/\",\n    subHref: [\"/\"],\n  },\n  {\n    id: nanoid(),\n    icon: <InventoryIcon fontSize=\"small\" />,\n    title: \"Content\",\n    href: \"/content\",\n    subHref: [\"content\"],\n  },\n  {\n    id: nanoid(),\n    icon: <PeopleIcon fontSize=\"small\" />,\n    title: \"Users\",\n    href: \"/users\",\n    subHref: [\"users\", \"phonebook\"],\n  },\n];\n\ninterface ICustomDrawer {\n  open: boolean;\n  handleDrawerClose: () => void;\n}\n\nfunction CustomDrawer(props: ICustomDrawer) {\n  const { open, handleDrawerClose } = props;\n  const { pathname } = useLocation();\n  const { resetUserCredential } = useAuthActions();\n\n  return (\n    <Drawer\n      open={open}\n      sx={{\n        \".MuiDrawer-paper\": {\n          backgroundColor: \"#16166B\",\n        },\n        position: \"relative\",\n      }}\n      variant=\"permanent\"\n    >\n      <DrawerHeader\n        sx={{\n          justifyContent: \"start\",\n        }}\n      >\n        <IconButton disableRipple onClick={handleDrawerClose}>\n          {/* <img\n            alt=\"logo\"\n            height=\"80\"\n            src={logoURL}\n            style={{\n              maxWidth: \"100%\",\n              display: \"block\",\n            }}\n          /> */}\n        </IconButton>\n      </DrawerHeader>\n\n      <List>\n        {NAVITEM.map((i) => {\n          const active = i.href === pathname;\n\n          return (\n            <ListItemButton\n              key={i.id}\n              component=\"a\"\n              href={i.href}\n              sx={{\n                minHeight: 40,\n                justifyContent: open ? \"initial\" : \"center\",\n                px: 2.5,\n                margin: \"5px 10px\",\n                backgroundColor: active ? \"#0C0C41\" : \"transparent\",\n                borderRadius: \"5px\",\n                \":hover\": {\n                  backgroundColor: \"#0C0C41\",\n                },\n              }}\n            >\n              <ListItemIcon\n                sx={{\n                  minWidth: 0,\n                  mr: open ? 3 : \"auto\",\n                  justifyContent: \"center\",\n                  color: active ? \"#E8E8E8\" : \"#FFFFFF\",\n                }}\n              >\n                {i.icon}\n              </ListItemIcon>\n              <ListItemText\n                primary={i.title}\n                sx={{\n                  opacity: open ? 1 : 0,\n\n                  \"& .MuiTypography-root\": {\n                    fontSize: \"14px\",\n                    fontWeight: \"500\",\n                    color: active ? \"#E8E8E8\" : \"#FFFFFF\",\n                  },\n                }}\n              />\n            </ListItemButton>\n          );\n        })}\n      </List>\n\n      <Button\n        startIcon={<LogoutIcon />}\n        sx={{\n          color: \"#ccc\",\n          backgroundColor: \"transparent\",\n          position: \"absolute\",\n          bottom: \"50px\",\n          left: \"50px\",\n          boxShadow: \"none\",\n          \":hover\": {\n            boxShadow: \"none\",\n            color: \"white\",\n            backgroundColor: \"transparent\",\n          },\n        }}\n        variant=\"outlined\"\n        onClick={() => {\n          resetUserCredential();\n        }}\n      >\n        logout\n      </Button>\n    </Drawer>\n  );\n}\n\nexport default CustomDrawer;\n","import { Box, Container } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport { Outlet } from \"react-router-dom\";\r\n\r\nimport CustomAppBar from \"./CustomAppBar\";\r\nimport CustomDrawer from \"./CustomDrawer\";\r\n\r\nexport const drawerWidth = 240;\r\n\r\nfunction DashboardLayout() {\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ display: \"flex\" }}>\r\n      <CustomAppBar handleDrawerOpen={handleDrawerOpen} open={open} />\r\n      <CustomDrawer handleDrawerClose={handleDrawerClose} open={open} />\r\n      <Box\r\n        component=\"main\"\r\n        sx={{\r\n          width: `calc(100% - ${drawerWidth}px)`,\r\n          minHeight: \"100vh\",\r\n          padding: \"20px\",\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <Container>\r\n          <Outlet />\r\n        </Container>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\n// function DashboardLayouts(props: any) {\r\n//   const { children, isLoading } = props;\r\n//   const [isSidebarOpen, setSidebarOpen] = useState(true);\r\n\r\n//   return (\r\n//     <>\r\n//       <DashboardLayoutRoot>\r\n//         {isLoading ? (\r\n//           <Container>\r\n//             <Box\r\n//               sx={{\r\n//                 display: \"flex\",\r\n//                 justifyContent: \"center\",\r\n//                 alignItems: \"center\",\r\n//                 height: \"100vh\",\r\n//               }}\r\n//             >\r\n//               <CircularProgress color=\"info\" size={20} />\r\n//             </Box>\r\n//           </Container>\r\n//         ) : (\r\n//           <Box\r\n//             component=\"main\"\r\n//             sx={{\r\n//               display: \"flex\",\r\n//               flex: \"1 1 auto\",\r\n//               flexDirection: \"column\",\r\n//               width: \"100%\",\r\n//               paddingTop: 2,\r\n//               flexGrow: 1,\r\n//               py: 8,\r\n//               px: 4,\r\n//             }}\r\n//           >\r\n//             {children}\r\n//           </Box>\r\n//         )}\r\n//       </DashboardLayoutRoot>\r\n//       <DashboardNavbar\r\n//         onSidebarOpen={() => {\r\n//           return setSidebarOpen(true);\r\n//         }}\r\n//       />\r\n//       <DashboardSidebar\r\n//         open={isSidebarOpen}\r\n//         onClose={() => {\r\n//           return setSidebarOpen(false);\r\n//         }}\r\n//       />\r\n//     </>\r\n//   );\r\n// }\r\n\r\nexport default DashboardLayout;\r\n"],"names":["AppBar","styled","MuiAppBar","shouldForwardProp","prop","_ref","theme","open","_objectSpread","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","drawerWidth","width","concat","enteringScreen","spacing","props","handleDrawerOpen","_jsx","position","sx","background","backdropFilter","boxShadow","borderBottom","children","_jsxs","Toolbar","IconButton","disableRipple","color","edge","marginRight","display","onClick","Stack","alignContent","alignItems","direction","gap","justifyContent","Box","maxWidth","TextField","fullWidth","InputProps","borderRadius","padding","paddingLeft","fontSize","endAdornment","InputAdornment","SvgIcon","SearchIcon","placeholder","variant","Avatar","src","cursor","height","openedMixin","overflowX","closedMixin","_defineProperty","breakpoints","up","DrawerHeader","_ref2","mixins","toolbar","Drawer","MuiDrawer","_ref3","flexShrink","whiteSpace","boxSizing","NAVITEM","id","nanoid","icon","DashboardIcon","title","href","subHref","InventoryIcon","PeopleIcon","handleDrawerClose","pathname","useLocation","resetUserCredential","useAuthActions","backgroundColor","List","map","i","active","ListItemButton","component","minHeight","px","margin","ListItemIcon","minWidth","mr","ListItemText","primary","opacity","fontWeight","Button","startIcon","LogoutIcon","bottom","left","_useState","useState","_useState2","_slicedToArray","setOpen","CustomAppBar","CustomDrawer","Container","Outlet"],"sourceRoot":""}