{"version":3,"file":"static/js/641.fa90e987.chunk.js","mappings":"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","sources":["components/Snackbar/useSnackbar.ts","components/Atoms/TextField/TextField.tsx","constants/errorMessages.ts","pages/Auth/Login/hooks/useForm.ts","services/auth.services.ts","pages/Auth/Login/index.tsx","pages/Auth/Login/query/useAuthApiActions.ts","services/client.services.ts","services/endPoints.config.ts"],"sourcesContent":["import React from \"react\";\n\nimport SnackbarContext from \"./SnackbarContext\";\n\nexport default function useConfirmModal() {\n  return React.useContext(SnackbarContext);\n}\n","import {\r\n  FormControl,\r\n  FormHelperText,\r\n  FormLabel,\r\n  InputAdornment,\r\n  InputProps,\r\n  TextField as InputField,\r\n} from \"@mui/material\";\r\nimport { SelectChangeEvent } from \"@mui/material/Select\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport * as React from \"react\";\r\nimport palette from \"theme/palette\";\r\n\r\ntype IOnSelect = (_: SelectChangeEvent) => void;\r\n\r\ninterface IOptios {\r\n  value: string;\r\n  id: number;\r\n}\r\n\r\ninterface Props extends InputProps {\r\n  style?: any;\r\n  label?: string;\r\n  helperText?: string;\r\n  icon?: React.ReactElement;\r\n  iconEnd?: boolean;\r\n  onSelectHandler?: IOnSelect;\r\n  selectValue?: string | number;\r\n  menuItems?: IOptios[];\r\n}\r\n\r\nconst CustomField = styled(InputField)({});\r\n\r\nfunction TextField(props: Props) {\r\n  const {\r\n    name,\r\n    type,\r\n    value,\r\n    disabled,\r\n    error,\r\n    label,\r\n    onChange,\r\n    onBlur,\r\n    placeholder,\r\n    required,\r\n    style,\r\n    helperText,\r\n    icon,\r\n    iconEnd,\r\n  } = props;\r\n\r\n  return (\r\n    <FormControl sx={style}>\r\n      {label && (\r\n        <FormLabel\r\n          htmlFor={name}\r\n          sx={{\r\n            color: \"inherit\",\r\n            fontSize: { xs: \"1rem\", xl: \"1.3rem\", fontWeight: \"500\" },\r\n          }}\r\n        >\r\n          {label}\r\n        </FormLabel>\r\n      )}\r\n\r\n      <CustomField\r\n        aria-describedby=\"my-helper-text\"\r\n        color=\"success\"\r\n        disabled={disabled}\r\n        error={error}\r\n        id={name}\r\n        InputProps={{\r\n          startAdornment: iconEnd ? null : (\r\n            <InputAdornment position=\"start\">{icon}</InputAdornment>\r\n          ),\r\n          endAdornment: iconEnd ? (\r\n            <InputAdornment position=\"end\">{icon}</InputAdornment>\r\n          ) : null,\r\n        }}\r\n        name={name}\r\n        placeholder={placeholder}\r\n        required={required}\r\n        sx={{\r\n          backgroundColor: \"#fff\",\r\n          borderRadius: \"8px\",\r\n          fontSize: { xs: \"1rem\", xl: \"1.3rem\" },\r\n        }}\r\n        type={type}\r\n        value={value}\r\n        variant=\"outlined\"\r\n        onBlur={onBlur}\r\n        onChange={onChange}\r\n      />\r\n\r\n      {helperText && (\r\n        <FormHelperText id=\"my-helper-text\" sx={{ color: palette.error.dark }}>\r\n          {helperText}\r\n        </FormHelperText>\r\n      )}\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nTextField.defaultProps = {\r\n  style: {\r\n    width: \"100%\",\r\n    marginBottom: \"10px\",\r\n  },\r\n  helperText: \"\",\r\n};\r\n\r\nexport default TextField;\r\n","const ErrorMessages = {\r\n  LOGIN: {\r\n    EMAIL: \"Please enter your email\",\r\n    PASSWORD: \"Please enter your password\",\r\n    SUCCESS: \"Logged successful\",\r\n  },\r\n};\r\n\r\nexport default ErrorMessages;\r\n","/**\r\n * @format\r\n */\r\n\r\nimport ErrorMessages from \"constants/errorMessages\";\r\nimport { FormikHelpers, useFormik } from \"formik\";\r\nimport { ILogin } from \"interfaces/auth\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst defaultValues: ILogin = {\r\n  username: \"admin\",\r\n  password: \"123456\",\r\n};\r\n\r\nconst schema = Yup.object().shape({\r\n  username: Yup.string().required(ErrorMessages.LOGIN.EMAIL),\r\n  password: Yup.string().required(ErrorMessages.LOGIN.PASSWORD),\r\n});\r\n\r\nconst useForm = (\r\n  onSubmit: (\r\n    values: ILogin,\r\n    formikHelpers: FormikHelpers<ILogin>,\r\n  ) => void | Promise<unknown>,\r\n  initialValues: ILogin = defaultValues,\r\n) => {\r\n  return useFormik<ILogin>({\r\n    initialValues,\r\n    enableReinitialize: true,\r\n    validationSchema: schema,\r\n    validateOnChange: true,\r\n    validateOnBlur: true,\r\n    validateOnMount: true,\r\n    onSubmit,\r\n  });\r\n};\r\n\r\nexport default useForm;\r\n","import { ILogin } from \"interfaces/auth\";\r\nimport client from \"./client.services\";\r\nimport API_URLS from \"./endPoints.config\";\r\n\r\nasync function login(Req: ILogin): Promise<any> {\r\n  // interface will create for response in interface folder\r\n  return client.post(API_URLS.LOGIN, {\r\n    username: Req.username,\r\n    password: Req.password,\r\n  });\r\n}\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n};\r\n\r\nexport { login, logout };\r\n","import Visibility from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  CircularProgress,\r\n  Container,\r\n  FormControlLabel,\r\n  IconButton,\r\n  Typography,\r\n  Card,\r\n} from \"@mui/material\";\r\nimport TextField from \"components/Atoms/TextField/TextField\";\r\nimport { ILogin } from \"interfaces/auth\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport palette from \"theme/palette\";\r\nimport useForm from \"./hooks/useForm\";\r\nimport { useAuthAPIActions } from \"./query/useAuthApiActions\";\r\n\r\nfunction Login() {\r\n  const { tryLogin } = useAuthAPIActions();\r\n  const [showPassword, setShowPassword] = useState(false);\r\n\r\n  const initialValues: ILogin = {\r\n    username: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  const onSubmit = async (values: ILogin) => {\r\n    await tryLogin(values);\r\n  };\r\n  const formik = useForm(onSubmit, initialValues);\r\n\r\n  const {\r\n    handleBlur,\r\n    handleChange,\r\n    handleSubmit,\r\n    values,\r\n    errors,\r\n    touched,\r\n    isValid,\r\n    dirty,\r\n    isSubmitting,\r\n  } = formik;\r\n\r\n  const handlePasswordToggle = () => setShowPassword((show) => !show);\r\n\r\n  return (\r\n    <Container\r\n      sx={{\r\n        pt: 7,\r\n      }}\r\n    >\r\n      <Card\r\n        sx={{\r\n          maxWidth: 450,\r\n          margin: \"auto\",\r\n          padding: \"20px\",\r\n          boxShadow: \"none\"\r\n        }}\r\n      >\r\n        <Typography\r\n          component=\"h1\"\r\n          sx={{\r\n            paddingBottom: \"1.75rem\",\r\n            textAlign: \"center\",\r\n            color: \"#070716\",\r\n            fontSize: \"3rem\",\r\n          }}\r\n          variant=\"h1\"\r\n        >\r\n          Rongchuang\r\n        </Typography>\r\n\r\n        <Box sx={{ color: palette.text.secondary }}>\r\n          <TextField\r\n            error={!!touched.username && !!errors.username}\r\n            helperText={(touched.username && errors && errors.username) || \"\"}\r\n            label=\"username \"\r\n            placeholder=\"username\"\r\n            value={values.username}\r\n            onBlur={handleBlur(\"username\")}\r\n            onChange={handleChange(\"username\")}\r\n          />\r\n          <TextField\r\n            iconEnd\r\n            error={!!touched.password && !!errors.password}\r\n            helperText={(touched.password && errors && errors.password) || \"\"}\r\n            icon={\r\n              <IconButton onClick={handlePasswordToggle}>\r\n                {showPassword ? <Visibility /> : <VisibilityOff />}\r\n              </IconButton>\r\n            }\r\n            label=\"Password\"\r\n            placeholder=\"Password\"\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            value={values.password}\r\n            onBlur={handleBlur(\"password\")}\r\n            onChange={handleChange(\"password\")}\r\n          />\r\n        </Box>\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            \"& a\": {\r\n              textDecoration: \"none\",\r\n              color: palette.info.light,\r\n              \"&:hover\": {\r\n                color: palette.info.dark,\r\n              },\r\n            },\r\n          }}\r\n        >\r\n          <Typography component=\"p\" sx={{ color: palette.text.secondary }}>\r\n            <FormControlLabel\r\n              control={<Checkbox defaultChecked />}\r\n              label=\"Remember Me\"\r\n            />\r\n          </Typography>\r\n          <Link to=\"/\">\r\n            <Typography>Forgot Password</Typography>\r\n          </Link>\r\n        </Box>\r\n        <Box sx={{ mt: 2, width: \"100%\" }}>\r\n          <Button\r\n            // disabled={!(isValid && dirty)}\r\n            sx={{\r\n              width: \"inherit\",\r\n              backgroundColor: \"#16166B\",\r\n              color: \"white\",\r\n              height: \"50px\",\r\n              fontSize: \"16px\",\r\n              boxShadow: \"none\",\r\n              \":hover\": {\r\n                boxShadow: \"none\",\r\n              },\r\n            }}\r\n            variant=\"contained\"\r\n            onClick={() => handleSubmit()}\r\n          >\r\n            {isSubmitting ? (\r\n              <CircularProgress color=\"warning\" size={12} />\r\n            ) : (\r\n              \"Login\"\r\n            )}\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","/* eslint-disable @typescript-eslint/naming-convention */\r\nimport useSnackBar from \"components/Snackbar/useSnackbar\";\r\nimport ErrorMessages from \"constants/errorMessages\";\r\nimport { ILogin } from \"interfaces/auth\";\r\nimport AppRoutes from \"navigation/appRoutes\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAuthActions } from \"redux/user/auth\";\r\nimport { login } from \"services/auth.services\";\r\n\r\nconst useAuthAPIActions = () => {\r\n  const snackbar = useSnackBar();\r\n  const navigate = useNavigate();\r\n  const { setUserCredential } = useAuthActions();\r\n  // const { login } = useAuth();\r\n\r\n  const tryLogin = async (values: ILogin) => {\r\n    try {\r\n      const response: any = await login(values); // login service\r\n      const Credentials = {\r\n        username: \"admin\",\r\n        password: \"123456\",\r\n      };\r\n      const successfulResponse = { status: 200, data: \"token\" };\r\n      const badRequestResponse = {\r\n        status: 400,\r\n        data: \"Something went wrong\",\r\n      };\r\n\r\n      // const response: any =\r\n      //   values === Credentials ? successfulResponse : badRequestResponse;\r\n      if (response.status === 200) {\r\n        setUserCredential({\r\n          token: response.data,\r\n          isLoggedIn: true,\r\n        });\r\n        navigate(AppRoutes.dashboard, {\r\n          replace: true,\r\n        });\r\n        snackbar?.show({\r\n          title: ErrorMessages.LOGIN.SUCCESS,\r\n          type: \"success\",\r\n        });\r\n      }\r\n      return true;\r\n    } catch (err: any) {\r\n      const msg = err.message || \"Something went wrong\";\r\n      snackbar?.show({\r\n        title: msg,\r\n        type: \"error\",\r\n      });\r\n      return false;\r\n    }\r\n  };\r\n  return {\r\n    tryLogin,\r\n  };\r\n};\r\n\r\nexport { useAuthAPIActions };\r\n","import axios from \"axios\";\r\nimport { store } from \"redux/store\";\r\n\r\nconst client = axios.create({\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nconst AUTH_ROUTES = [\"login\", \"reset-password\", \"forgot-password\", \"signup\"];\r\n\r\nconst FILE_ROUTES = [\"upload\"];\r\n\r\nclient.interceptors.request.use(\r\n  (request: any) => {\r\n    const authRoutes = AUTH_ROUTES.some((i) => {\r\n      return request.url.includes(i);\r\n    });\r\n    const uploadRoutes = FILE_ROUTES.some((i) => {\r\n      return request.url.includes(i);\r\n    });\r\n    const { user } = store.getState();\r\n    const { token } = user;\r\n\r\n    if (!authRoutes) {\r\n      // TODO: add token to secure request\r\n      request.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    if (uploadRoutes) {\r\n      request.headers[\"Content-Type\"] = \"multipart/form-data\";\r\n    }\r\n    return request;\r\n  },\r\n  (error: any) => {\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\nclient.interceptors.response.use(\r\n  (response: any) => {\r\n    if (response.data.error) {\r\n      return Promise.reject(response.data);\r\n    }\r\n    return Promise.resolve(response.data);\r\n  },\r\n  (error: any) => {\r\n    if (error.response?.status === 401) {\r\n      // TODO: handle expired token\r\n      // store.dispatch(\r\n      //   setUserCredential({\r\n      //     token: \"\",\r\n      //     userInfo: null,\r\n      //     isLoggedIn: false,\r\n      //     role: \"\",\r\n      //   }),\r\n      // );\r\n      // window.location.href = \"/\";\r\n      return Promise.reject(error.response?.data);\r\n    }\r\n    return Promise.reject(error.response?.data);\r\n  },\r\n);\r\n\r\nexport default client;\r\n","/* eslint-disable react/jsx-sort-props */\r\nconst { REACT_APP_BASE_URL } = process.env;\r\n\r\nconst BASE_API_URL = `${REACT_APP_BASE_URL}/api`;\r\n\r\nconst endPoints = {\r\n  login: \"admin/login\",\r\n  getUsers: \"users\",\r\n  getPhonebook: \"phonebook/getContacts\",\r\n  addUser: \"user\",\r\n  addPhonebook: \"phonebook/saveContacts\",\r\n  getContent: \"contents\",\r\n  addContent: \"video/upload\",\r\n  deleteContent: \"content\",\r\n};\r\n\r\nconst API_URLS = {\r\n  LOGIN: `${BASE_API_URL}/${endPoints.login}`,\r\n  FETCH_USERS: `${BASE_API_URL}/${endPoints.getUsers}`,\r\n  FETCH_PHONEBOOK: `${BASE_API_URL}/${endPoints.getPhonebook}`,\r\n  ADD_USER: `${BASE_API_URL}/${endPoints.addUser}`,\r\n  ADD_PHONEBOOK: `${BASE_API_URL}/${endPoints.addPhonebook}`,\r\n  GET_CONTENT: `${BASE_API_URL}/${endPoints.getContent}`,\r\n  ADD_CONTENT: `${BASE_API_URL}/${endPoints.addContent}`,\r\n  DELETE_CONTENT: `${BASE_API_URL}/${endPoints.deleteContent}`,\r\n};\r\n\r\nexport default API_URLS;\r\n"],"names":["useConfirmModal","React","SnackbarContext","CustomField","styled","InputField","TextField","props","name","type","value","disabled","error","label","onChange","onBlur","placeholder","required","style","helperText","icon","iconEnd","_jsxs","FormControl","sx","children","_jsx","FormLabel","htmlFor","color","fontSize","xs","xl","fontWeight","id","InputProps","startAdornment","InputAdornment","position","endAdornment","backgroundColor","borderRadius","variant","FormHelperText","palette","defaultProps","width","marginBottom","LOGIN","EMAIL","PASSWORD","SUCCESS","defaultValues","username","password","schema","Yup","shape","ErrorMessages","onSubmit","initialValues","arguments","length","undefined","useFormik","enableReinitialize","validationSchema","validateOnChange","validateOnBlur","validateOnMount","login","_x","_login","apply","_asyncToGenerator","_regeneratorRuntime","mark","_callee","Req","wrap","_context","prev","next","abrupt","client","API_URLS","stop","_useAuthAPIActions","snackbar","useSnackBar","navigate","useNavigate","setUserCredential","useAuthActions","tryLogin","_ref","values","response","msg","sent","status","token","data","isLoggedIn","AppRoutes","replace","show","title","t0","message","useAuthAPIActions","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","formik","useForm","handleBlur","handleChange","handleSubmit","errors","touched","isSubmitting","isValid","dirty","Container","pt","Card","maxWidth","margin","padding","boxShadow","Typography","component","paddingBottom","textAlign","Box","IconButton","onClick","Visibility","VisibilityOff","display","justifyContent","alignItems","textDecoration","FormControlLabel","control","Checkbox","defaultChecked","Link","to","mt","Button","height","CircularProgress","size","axios","headers","AUTH_ROUTES","FILE_ROUTES","interceptors","request","use","authRoutes","some","i","url","includes","uploadRoutes","store","user","Authorization","concat","Promise","reject","resolve","_error$response","_error$response3","_error$response2","BASE_API_URL","process","endPoints","FETCH_USERS","FETCH_PHONEBOOK","ADD_USER","ADD_PHONEBOOK","GET_CONTENT","ADD_CONTENT","DELETE_CONTENT"],"sourceRoot":""}