{"version":3,"file":"static/js/738.09477c5c.chunk.js","mappings":"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","sources":["pages/Admin/Dashboard/query/useFetchPhonebook.ts","pages/Admin/phonebook/Phonebook.tsx","services/client.services.ts","services/endPoints.config.ts","services/user.services.ts","utils/QueryKeys.ts","../node_modules/@mui/material/FormControl/FormControlContext.js","../node_modules/@mui/material/FormControl/useFormControl.js"],"sourcesContent":["/**\n * @format\n */\nimport { useQuery } from \"react-query\";\nimport {\n  fetchPhonebook,\n  fetchUsers,\n  getPhonebookByUserId,\n} from \"services/user.services\";\nimport { QueryKeys } from \"utils/QueryKeys\";\n\nasync function getPhonebook(id: string): Promise<any> {\n  try {\n    const response: any = await fetchPhonebook(id);\n    if (response.status === 200) {\n      return response;\n    }\n    return {\n      statusCode: 404,\n    };\n  } catch (error) {\n    return Promise.reject(error);\n  }\n}\n\nconst useFetchPhoneBook = (id: string) => {\n  const cacheKey = [QueryKeys.getPhonebook, id];\n  return useQuery(cacheKey, () => getPhonebookByUserId(id), {\n    enabled: true,\n    refetchOnWindowFocus: false,\n  });\n};\n\nexport { useFetchPhoneBook };\n","import { useParams } from \"react-router-dom\";\nimport { useFetchPhoneBook } from \"pages/Admin/Dashboard/query/useFetchPhonebook\";\nimport React from \"react\";\nimport CreateIcon from \"@mui/icons-material/Create\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport {\n  Box,\n  Card,\n  CardContent,\n  CardMedia,\n  Checkbox,\n  IconButton,\n  Stack,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableContainer,\n  TableRow,\n  Paper,\n  Typography,\n  Grid,\n  Button,\n} from \"@mui/material\";\n// import { useAlert } from \"components/alert\";\nimport { useState } from \"react\";\nimport PerfectScrollbar from \"react-perfect-scrollbar\";\nimport palette from \"theme/palette\";\nimport moment from \"moment\";\nimport AppRoutes from \"navigation/appRoutes\";\nimport { Link } from \"react-router-dom\";\nimport { useAlert } from \"components/Alert\";\nimport { useFetchContent } from \"../Dashboard/query/useFetchContent\";\nimport { useFetchUsers } from \"../Dashboard/query/useFetchUsers\";\n\nfunction Phonebook() {\n  const [selectedcontentIds, setSelectedcontentIds] = useState<string[]>([]);\n\n  const { id } = useParams();\n  const {\n    data: phonebook,\n    isLoading,\n    refetch,\n  } = useFetchPhoneBook(String(id || \"0\"));\n\n  return (\n    <Box\n      sx={{\n        minWidth: 1050,\n        overflow: \"auto\",\n      }}\n    >\n      <Stack marginY=\"20px\" gap={1}>\n        <Typography\n          component=\"a\"\n          href=\"/users\"\n          sx={{\n            fontSize: \"1rem\",\n            textDecoration: \"underline\",\n          }}\n        >\n          users/\n        </Typography>\n        <Typography\n          component=\"h2\"\n          sx={{\n            fontSize: \"2rem\",\n          }}\n        >\n          Phonebook\n        </Typography>\n      </Stack>\n      <TableContainer\n        component={Paper}\n        sx={{\n          maxHeight: \"600px\",\n          minHeight: \"400px\",\n        }}\n      >\n        <Table stickyHeader>\n          <TableHead\n            sx={{\n              backgroundColor: \"#e1e1e1 !important\",\n              \"& th\": { fontWeight: 600 },\n            }}\n          >\n            <TableRow>\n              <TableCell padding=\"checkbox\">\n                <Checkbox\n                  // checked={selectedcontentIds.length === total}\n                  color=\"primary\"\n                  // indeterminate={\n                  //   selectedcontentIds.length > 0 &&\n                  // }\n                  //   onChange={handleSelectAll}\n                />\n              </TableCell>\n              <TableCell>\n                <Typography\n                  sx={{\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  Name\n                </Typography>\n              </TableCell>\n\n              <TableCell>\n                <Typography\n                  sx={{\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  Mobile\n                </Typography>\n              </TableCell>\n\n              <TableCell>\n                <Typography\n                  sx={{\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  Created Date\n                </Typography>\n              </TableCell>\n\n              <TableCell>\n                <Typography\n                  sx={{\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  Actions\n                </Typography>\n              </TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {phonebook?.data?.map((content) => {\n              const { _id: id, name, mobile, createdAt } = content;\n\n              return (\n                <TableRow\n                  key={id}\n                  hover\n                  selected={selectedcontentIds.indexOf(id) !== -1}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={selectedcontentIds.indexOf(id) !== -1}\n                      value=\"true\"\n                      onChange={(event) => {\n                        // return handleSelectOne(event, id);\n                      }}\n                    />\n                  </TableCell>\n                  <TableCell\n                    sx={{\n                      width: \"100px\",\n                    }}\n                  >\n                    <Typography\n                      component=\"a\"\n                      href={`/users/phonebook/${id}`}\n                      sx={{\n                        textTransform: \"capitalize\",\n                        textDecoration: \"underline\",\n                      }}\n                    >\n                      {name}\n                    </Typography>\n                  </TableCell>\n\n                  <TableCell>\n                    <Typography\n                      sx={{\n                        textTransform: \"capitalize\",\n                      }}\n                    >\n                      {mobile}\n                    </Typography>\n                  </TableCell>\n\n                  <TableCell>\n                    <Typography>\n                      {moment(createdAt).format(\"MM/DD/YYYY\")}\n                    </Typography>\n                  </TableCell>\n\n                  <TableCell>\n                    <Box\n                      sx={{\n                        display: \"flex\",\n                        gap: 1,\n                        \"& svg\": {\n                          cursor: \"pointer\",\n                        },\n                      }}\n                    >\n                      <Box>\n                        <IconButton\n                          onClick={() => {}}\n                          sx={{\n                            \"&:hover\": {\n                              color: palette.error.main,\n                            },\n                          }}\n                        >\n                          <DeleteIcon\n                            sx={{\n                              fontSize: \"1.5rem\",\n                              color: palette.secondary.lightGray,\n                              \"&:hover\": {\n                                color: palette.error.main,\n                              },\n                            }}\n                          />\n                        </IconButton>\n                      </Box>\n                    </Box>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Box>\n  );\n}\n\nexport default Phonebook;\n","import axios from \"axios\";\r\nimport { store } from \"redux/store\";\r\n\r\nconst client = axios.create({\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nconst AUTH_ROUTES = [\"login\", \"reset-password\", \"forgot-password\", \"signup\"];\r\n\r\nconst FILE_ROUTES = [\"upload\"];\r\n\r\nclient.interceptors.request.use(\r\n  (request: any) => {\r\n    const authRoutes = AUTH_ROUTES.some((i) => {\r\n      return request.url.includes(i);\r\n    });\r\n    const uploadRoutes = FILE_ROUTES.some((i) => {\r\n      return request.url.includes(i);\r\n    });\r\n    const { user } = store.getState();\r\n    const { token } = user;\r\n\r\n    if (!authRoutes) {\r\n      // TODO: add token to secure request\r\n      request.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    if (uploadRoutes) {\r\n      request.headers[\"Content-Type\"] = \"multipart/form-data\";\r\n    }\r\n    return request;\r\n  },\r\n  (error: any) => {\r\n    return Promise.reject(error);\r\n  },\r\n);\r\n\r\nclient.interceptors.response.use(\r\n  (response: any) => {\r\n    if (response.data.error) {\r\n      return Promise.reject(response.data);\r\n    }\r\n    return Promise.resolve(response.data);\r\n  },\r\n  (error: any) => {\r\n    if (error.response?.status === 401) {\r\n      // TODO: handle expired token\r\n      // store.dispatch(\r\n      //   setUserCredential({\r\n      //     token: \"\",\r\n      //     userInfo: null,\r\n      //     isLoggedIn: false,\r\n      //     role: \"\",\r\n      //   }),\r\n      // );\r\n      // window.location.href = \"/\";\r\n      return Promise.reject(error.response?.data);\r\n    }\r\n    return Promise.reject(error.response?.data);\r\n  },\r\n);\r\n\r\nexport default client;\r\n","/* eslint-disable react/jsx-sort-props */\r\nconst { REACT_APP_BASE_URL } = process.env;\r\n\r\nconst BASE_API_URL = `${REACT_APP_BASE_URL}/api`;\r\n\r\nconst endPoints = {\r\n  login: \"admin/login\",\r\n  getUsers: \"users\",\r\n  getPhonebook: \"phonebook/getContacts\",\r\n  addUser: \"user\",\r\n  addPhonebook: \"phonebook/saveContacts\",\r\n  getContent: \"contents\",\r\n  addContent: \"video/upload\",\r\n  deleteContent: \"content\",\r\n};\r\n\r\nconst API_URLS = {\r\n  LOGIN: `${BASE_API_URL}/${endPoints.login}`,\r\n  FETCH_USERS: `${BASE_API_URL}/${endPoints.getUsers}`,\r\n  FETCH_PHONEBOOK: `${BASE_API_URL}/${endPoints.getPhonebook}`,\r\n  ADD_USER: `${BASE_API_URL}/${endPoints.addUser}`,\r\n  ADD_PHONEBOOK: `${BASE_API_URL}/${endPoints.addPhonebook}`,\r\n  GET_CONTENT: `${BASE_API_URL}/${endPoints.getContent}`,\r\n  ADD_CONTENT: `${BASE_API_URL}/${endPoints.addContent}`,\r\n  DELETE_CONTENT: `${BASE_API_URL}/${endPoints.deleteContent}`,\r\n};\r\n\r\nexport default API_URLS;\r\n","import { GetAllUsersRoot } from \"types/getAllUersRespone\";\nimport { GetAllPhonebookByUserIdRoot } from \"types/getAllPhonebookByUserIdResponse\";\nimport client from \"./client.services\";\nimport API_URLS from \"./endPoints.config\";\n\nasync function fetchUsers(): Promise<any> {\n  // interface will create for response in interface folder\n  return client.get(API_URLS.FETCH_USERS);\n}\n\nexport async function getPhonebookByUserId(\n  id: string,\n): Promise<GetAllPhonebookByUserIdRoot> {\n  const url = `${API_URLS.FETCH_PHONEBOOK}/${id}`;\n  return client.get(url);\n}\n\nasync function fetchPhonebook(id: string): Promise<any> {\n  // interface will create for response in interface folder\n  const url = `${API_URLS.FETCH_PHONEBOOK}/${id}`;\n  return client.get(url);\n}\n\nasync function addUser(body: any): Promise<any> {\n  // interface will create for response in interface folder\n  return client.post(API_URLS.ADD_USER, body);\n}\n\nasync function addPhonebook(body: any): Promise<any> {\n  // interface will create for response in interface folder\n  return client.post(API_URLS.ADD_PHONEBOOK, body);\n}\n\nexport async function getAllUsers(): Promise<GetAllUsersRoot> {\n  return client.get(API_URLS.FETCH_USERS);\n}\n\nexport { fetchUsers, addUser, fetchPhonebook, addPhonebook };\n","/**\r\n * @format\r\n */\r\nconst QueryKeys = {\r\n  getUsers: \"user.get\",\r\n  getPhonebook: \"user.getPhonebook\",\r\n  getContent:\"getContent\"\r\n\r\n};\r\n\r\nexport type QueryKeysType = keyof typeof QueryKeys;\r\n\r\nexport { QueryKeys };\r\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\nconst FormControlContext = /*#__PURE__*/React.createContext(undefined);\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\nexport default FormControlContext;","import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}"],"names":["_phonebook$data","_useState","useState","_useState2","_slicedToArray","selectedcontentIds","id","useParams","_useFetchPhoneBook","cacheKey","QueryKeys","useQuery","getPhonebookByUserId","enabled","refetchOnWindowFocus","useFetchPhoneBook","String","phonebook","data","isLoading","refetch","_jsxs","Box","sx","minWidth","overflow","children","Stack","marginY","gap","_jsx","Typography","component","href","fontSize","textDecoration","TableContainer","Paper","maxHeight","minHeight","Table","stickyHeader","TableHead","backgroundColor","fontWeight","TableRow","TableCell","padding","Checkbox","color","TableBody","map","content","_id","name","mobile","createdAt","hover","selected","indexOf","checked","value","onChange","event","width","concat","textTransform","moment","format","display","cursor","IconButton","onClick","palette","DeleteIcon","client","axios","headers","AUTH_ROUTES","FILE_ROUTES","interceptors","request","use","authRoutes","some","i","url","includes","uploadRoutes","token","store","user","Authorization","error","Promise","reject","response","resolve","_error$response","_error$response3","_error$response2","status","BASE_API_URL","process","endPoints","API_URLS","LOGIN","FETCH_USERS","FETCH_PHONEBOOK","ADD_USER","ADD_PHONEBOOK","GET_CONTENT","ADD_CONTENT","DELETE_CONTENT","_x","_getPhonebookByUserId","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","wrap","_context2","prev","next","abrupt","stop","getAllUsers","_getAllUsers","_callee6","_context6","getUsers","getPhonebook","getContent","FormControlContext","React","undefined","useFormControl"],"sourceRoot":""}